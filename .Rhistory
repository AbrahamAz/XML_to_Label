cal_comm_hotdeck_com_draft <- function(order, domain, forced = FALSE) {
if (forced == TRUE){
data <- comm_forced
}else{
data <- create_comm_na(116)
}
data_imputed <- hotdeck(data = data,
variable = c("F_Sub.District_En"),
ord_var = c(order),
domain_var = c(domain))
data_imputed %>%
select(F_Sub.District_En,T_Community_En,New.Arrivals..HH.,id,F_Sub.District_En_imp) %>%
filter(F_Sub.District_En_imp == TRUE) %>%
mutate(conc_imp = paste0(T_Community_En,"_",F_Sub.District_En)) %>%
left_join(arr, by = "id") %>%
mutate(wrong_imp = ifelse(conc == conc_imp, 0, New.Arrivals..HH.)) %>%
ungroup() %>%
summarise(error_imp = sum(wrong_imp) / sum(New.Arrivals..HH.))
}
cal_comm_knn_com_draft <- function(k,
dist_var,
catFun,
addRandom,
forced = FALSE) {
if (forced == TRUE){
data <- comm_forced
}else{
data <- create_comm_na(116)
}
data_imputed <- kNN(data = data,
variable = c("F_Sub.District_En"),
dist_var = c(dist_var),
weights = NULL,
k = k,
catFun = catFun,
addRandom = addRandom)
data_imputed %>%
select(F_Sub.District_En,T_Community_En,New.Arrivals..HH.,id,F_Sub.District_En_imp) %>%
filter(F_Sub.District_En_imp == TRUE) %>%
mutate(conc_imp = paste0(T_Community_En,"_",F_Sub.District_En)) %>%
left_join(arr, by = "id") %>%
mutate(wrong_imp = ifelse(conc == conc_imp, 0, New.Arrivals..HH.)) %>%
ungroup() %>%
summarise(error_imp = sum(wrong_imp) / sum(New.Arrivals..HH.))
}
set.seed(100)
# SUBHOTDECK_COM_NULL_NULL <- sapply(1:200, function(i) {cal_comm_hotdeck_sub(order = NULL,
#                                             domain = NULL)}) %>%
#   unlist() %>%
#   mean()
COMHOTDECK_COM_NULL_NULL <- sapply(1:200, function(i) {cal_comm_hotdeck_com_draft(order = NULL,
domain = NULL)}) %>%
unlist() %>%
mean()
set.seed(100)
# SUBHOTDECK_COM_NULL_DIS.ARRIVAL <- sapply(1:200, function(i) {cal_comm_hotdeck_sub(order = NULL,
#                                             domain = "T_District_En")}) %>%
#   unlist() %>%
#   mean()
COMHOTDECK_COM_NULL_DIS.ARRIVAL <- sapply(1:200, function(i) {cal_comm_hotdeck_com_draft(order = NULL,
domain = "T_District_En")}) %>%
unlist() %>%
mean()
set.seed(100)
# SUBHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL <- sapply(1:200, function(i) {cal_comm_hotdeck_sub(order = "New.Arrivals..HH.",
#                                             domain = "T_District_En")}) %>%
#   unlist() %>%
#   mean()
COMHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL <- sapply(1:200, function(i) {cal_comm_hotdeck_com_draft(order = "New.Arrivals..HH.",
domain = "T_District_En")}) %>%
unlist() %>%
mean()
set.seed(100)
# SUBkNN_COM_100_LAT.LON_SAMPLE_TRUE <- sapply(1:200, function(i) {cal_comm_knn_sub(100, dist_var = c("lat", "long"), catFun = sampleCat, addRandom = TRUE)}) %>%
#   unlist() %>%
#   mean()
COMkNN_COM_100_LAT.LON_SAMPLE_TRUE <- sapply(1:200, function(i) {cal_comm_knn_com_draft(100, dist_var = c("lat", "long"), catFun = sampleCat, addRandom = TRUE)}) %>%
unlist() %>%
mean()
#Codes added to export results for paper
#Creating data frame with all results
# plot1sub <- data.frame(Approach=c("SUBHOTDECK_COM_NULL_NULL","SUBHOTDECK_COM_NULL_DIS.ARRIVAL",
#                                   "SUBHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL","SUBkNN_COM_100_LAT.LON_SAMPLE_TRUE"),
#                        Margin_Error = c(SUBHOTDECK_COM_NULL_NULL,SUBHOTDECK_COM_NULL_DIS.ARRIVAL,
#                                         SUBHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL,SUBkNN_COM_100_LAT.LON_SAMPLE_TRUE)) %>%
#   mutate(Margin_Error = round(Margin_Error, 4))
plot1com_draft <- data.frame(Approach=c("COMHOTDECK_COM_NULL_NULL","COMHOTDECK_COM_NULL_DIS.ARRIVAL",
"COMHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL","COMkNN_COM_100_LAT.LON_SAMPLE_TRUE"),
Margin_Error = c(COMHOTDECK_COM_NULL_NULL,COMHOTDECK_COM_NULL_DIS.ARRIVAL,
COMHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL,COMkNN_COM_100_LAT.LON_SAMPLE_TRUE)) %>%
mutate(Margin_Error = round(Margin_Error, 4))
# write_xlsx(plot1sub, "output/plot1sub.xlsx")
write_xlsx(plot1com_draft, "output/plot1com_draft.xlsx")
create_hh_na <- function(n)  {
na <- sample_n(arrivals, n) %>%
mutate(F_Sub.District_En = NA)
not_na <-anti_join(arrivals, na, by = "id")
with_na <- bind_rows(not_na, na)
with_na <- with_na %>%
rowwise() %>%
slice(rep(1:n(), each = New.Arrivals..HH.)) %>%
mutate(junk = runif(1))
}
hh_forced <- arrivals %>%
mutate(F_Sub.District_En = ifelse(T_Sub.District_En %in% c("Jandairis","Dana","Raju","Daret Azza"),NA,F_Sub.District_En)) %>%
rowwise() %>%
slice(rep(1:n(), each = New.Arrivals..HH.)) %>%
mutate(junk = runif(1))
#Outside of the function, we also generate the df called "arrivals_each" that represents each arrival as one row.
arrivals_each <- arrivals %>%
filter(!is.na(F_Sub.District_En)) %>%
rowwise() %>%
slice(rep(1:n(), each = New.Arrivals..HH.)) %>%
mutate(conc = paste0(T_Community_En,"_",F_Sub.District_En))
arr_each <- arrivals_each %>%
select(id, conc)
set.seed(100)
dat_hh <- create_hh_na(116)
dat_hh_imputed %>%
group_by(F_Sub.District_En, original) %>%
summarize(n = sum(New.Arrivals..HH.)) %>%
pivot_wider(names_from = original,
values_from = n) %>%
mutate(abs_diff = abs(yes - no)) %>%
ungroup() %>%
summarise(diff = sum(abs_diff) / sum(yes))
cal_hh_hotdeck_sub <- function(order, domain, forced = FALSE) {
if (forced == TRUE){
data <- hh_forced
}else{
data <- create_hh_na(116)
}
data_imputed <- hotdeck(data = data,
variable = c("F_Sub.District_En"),
ord_var = c(order),
domain_var = c(domain))
bind_rows(data_imputed, arrivals_each) %>%
mutate(original = ifelse(is.na(F_Sub.District_En_imp), "yes", "no")) %>%
group_by(F_Sub.District_En, original) %>%
summarize(n = n()) %>%
pivot_wider(names_from = original,
values_from = n) %>%
mutate(no = ifelse(is.na(no), 0, no),
abs_diff = abs(yes - no)) %>%
ungroup() %>%
summarise(diff = sum(abs_diff) / sum(yes))
}
cal_hh_hotdeck_com <- function(order, domain, forced = FALSE) {
if (forced == TRUE){
data <- hh_forced
}else{
data <- create_hh_na(116)
}
data_imputed <- hotdeck(data = data,
variable = c("F_Sub.District_En"),
ord_var = c(order),
domain_var = c(domain))
bind_rows(data_imputed, arrivals_each) %>%
mutate(original = ifelse(is.na(F_Sub.District_En_imp), "yes", "no")) %>%
group_by(T_Community_En, F_Sub.District_En, original) %>%
summarize(n = n()) %>%
pivot_wider(names_from = original,
values_from = n) %>%
mutate(no = ifelse(is.na(no), 0, no),
yes = ifelse(is.na(yes), 0, yes),
abs_diff = abs(yes - no)) %>%
ungroup() %>%
summarise(diff = sum(abs_diff) / sum(yes))
}
cal_hh_knn_sub <- function(k,
dist_var,
catFun,
addRandom,
forced = FALSE) {
if (forced == TRUE){
data <- hh_forced
}else{
data <- create_hh_na(116)
}
data_imputed <- kNN(data = data,
variable = c("F_Sub.District_En"),
dist_var = c(dist_var),
weights = NULL,
k = k,
catFun = catFun,
addRandom = addRandom)
bind_rows(data_imputed, arrivals_each) %>%
mutate(original = ifelse(is.na(F_Sub.District_En_imp), "yes", "no")) %>%
group_by(F_Sub.District_En, original) %>%
summarize(n = n()) %>%
pivot_wider(names_from = original,
values_from = n) %>%
mutate(no = ifelse(is.na(no), 0, no),
abs_diff = abs(yes - no)) %>%
ungroup() %>%
summarise(diff = sum(abs_diff) / sum(yes))
}
cal_hh_knn_com <- function(k,
dist_var,
catFun,
addRandom,
forced = FALSE) {
if (forced == TRUE){
data <- hh_forced
}else{
data <- create_hh_na(116)
}
data_imputed <- kNN(data = data,
variable = c("F_Sub.District_En"),
dist_var = c(dist_var),
weights = NULL,
k = k,
catFun = catFun,
addRandom = addRandom)
bind_rows(data_imputed, arrivals_each) %>%
mutate(original = ifelse(is.na(F_Sub.District_En_imp), "yes", "no")) %>%
group_by(T_Community_En, F_Sub.District_En, original) %>%
summarize(n = n()) %>%
pivot_wider(names_from = original,
values_from = n) %>%
mutate(no = ifelse(is.na(no), 0, no),
yes = ifelse(is.na(yes), 0, yes),
abs_diff = abs(yes - no)) %>%
ungroup() %>%
summarise(diff = sum(abs_diff) / sum(yes))
}
cal_hh_hotdeck_com_draft <- function(order, domain, forced = FALSE) {
if (forced == TRUE){
data <- hh_forced
}else{
data <- create_hh_na(116)
}
data_imputed <- hotdeck(data = data,
variable = c("F_Sub.District_En"),
ord_var = c(order),
domain_var = c(domain))
data_imputed %>%
select(F_Sub.District_En,T_Community_En,New.Arrivals..HH.,id,F_Sub.District_En_imp) %>%
filter(F_Sub.District_En_imp == TRUE) %>%
mutate(conc_imp = paste0(T_Community_En,"_",F_Sub.District_En)) %>%
left_join(arr_each, by = "id") %>%
mutate(wrong_imp = ifelse(conc == conc_imp, 0, New.Arrivals..HH.)) %>%
ungroup() %>%
summarise(error_imp = sum(wrong_imp) / sum(New.Arrivals..HH.))
}
cal_hh_knn_com_draft <- function(k,
dist_var,
catFun,
addRandom,
forced = FALSE) {
if (forced == TRUE){
data <- hh_forced
}else{
data <- create_hh_na(116)
}
data_imputed <- kNN(data = data,
variable = c("F_Sub.District_En"),
dist_var = c(dist_var),
weights = NULL,
k = k,
catFun = catFun,
addRandom = addRandom)
data_imputed %>%
select(F_Sub.District_En,T_Community_En,New.Arrivals..HH.,id,F_Sub.District_En_imp) %>%
filter(F_Sub.District_En_imp == TRUE) %>%
mutate(conc_imp = paste0(T_Community_En,"_",F_Sub.District_En)) %>%
left_join(arr_each, by = "id") %>%
mutate(wrong_imp = ifelse(conc == conc_imp, 0, New.Arrivals..HH.)) %>%
ungroup() %>%
summarise(error_imp = sum(wrong_imp) / sum(New.Arrivals..HH.))
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(VIM)
library(DT)
library(writexl)
#To silence the obnoxious group_by warning
options(dplyr.summarise.inform = FALSE)
rm(list = ls())
arrivals <- read.csv("data/REACH_December_2020.csv")
locations <- read.csv("data/ocha_locations.csv")
#Here I'm adding a column for ids.
arrivals <- arrivals %>%
mutate(id = 1:nrow(arrivals))
arrivals %>%
distinct(id) %>%
dim()
#Now adding in GPS points
locations <- locations %>%
rename(lat=Latitude_y, long=Longitude_x, community_pcode=admin4Pcod) %>%
select(lat, long, community_pcode) %>%
rename(T_Community_PCODE = community_pcode) %>%
#It's important to do this or the pcodes with n codes will be duplicated in the join below.
distinct(T_Community_PCODE, .keep_all = TRUE)
arrivals <- left_join(arrivals, locations, by = "T_Community_PCODE")
arrivals %>%
distinct(id) %>%
dim()
# Froced NA
comm_forced <- arrivals %>%
mutate(F_Sub.District_En = ifelse(T_Sub.District_En %in% c("Jandairis","Dana","Raju","Daret Azza"),NA,F_Sub.District_En))
#Arrival conc
arrivals <- arrivals %>%
mutate(conc = paste0(T_Community_En,"_",F_Sub.District_En))
arr <- arrivals %>%
select(id, conc)
create_comm_na <- function(n)  {
na <- sample_n(arrivals, n) %>%
mutate(F_Sub.District_En = NA)
not_na <-anti_join(arrivals, na, by = "id")
with_na <- bind_rows(not_na, na)
}
set.seed(100)
comm_na <- create_comm_na(116)
cal_comm_hotdeck_com_draft <- function(order, domain, forced = FALSE) {
if (forced == TRUE){
data <- comm_forced
}else{
data <- create_comm_na(116)
}
data_imputed <- hotdeck(data = data,
variable = c("F_Sub.District_En"),
ord_var = c(order),
domain_var = c(domain))
data_imputed %>%
select(F_Sub.District_En,T_Community_En,New.Arrivals..HH.,id,F_Sub.District_En_imp) %>%
filter(F_Sub.District_En_imp == TRUE) %>%
mutate(conc_imp = paste0(T_Community_En,"_",F_Sub.District_En)) %>%
left_join(arr, by = "id") %>%
mutate(wrong_imp = ifelse(conc == conc_imp, 0, New.Arrivals..HH.)) %>%
ungroup() %>%
summarise(error_imp = sum(wrong_imp) / sum(New.Arrivals..HH.))
}
cal_comm_knn_com_draft <- function(k,
dist_var,
catFun,
addRandom,
forced = FALSE) {
if (forced == TRUE){
data <- comm_forced
}else{
data <- create_comm_na(116)
}
data_imputed <- kNN(data = data,
variable = c("F_Sub.District_En"),
dist_var = c(dist_var),
weights = NULL,
k = k,
catFun = catFun,
addRandom = addRandom)
data_imputed %>%
select(F_Sub.District_En,T_Community_En,New.Arrivals..HH.,id,F_Sub.District_En_imp) %>%
filter(F_Sub.District_En_imp == TRUE) %>%
mutate(conc_imp = paste0(T_Community_En,"_",F_Sub.District_En)) %>%
left_join(arr, by = "id") %>%
mutate(wrong_imp = ifelse(conc == conc_imp, 0, New.Arrivals..HH.)) %>%
ungroup() %>%
summarise(error_imp = sum(wrong_imp) / sum(New.Arrivals..HH.))
}
set.seed(100)
# SUBHOTDECK_COM_NULL_NULL <- sapply(1:200, function(i) {cal_comm_hotdeck_sub(order = NULL,
#                                             domain = NULL)}) %>%
#   unlist() %>%
#   mean()
COMHOTDECK_COM_NULL_NULL <- sapply(1:200, function(i) {cal_comm_hotdeck_com_draft(order = NULL,
domain = NULL)}) %>%
unlist() %>%
mean()
set.seed(100)
# SUBHOTDECK_COM_NULL_DIS.ARRIVAL <- sapply(1:200, function(i) {cal_comm_hotdeck_sub(order = NULL,
#                                             domain = "T_District_En")}) %>%
#   unlist() %>%
#   mean()
COMHOTDECK_COM_NULL_DIS.ARRIVAL <- sapply(1:200, function(i) {cal_comm_hotdeck_com_draft(order = NULL,
domain = "T_District_En")}) %>%
unlist() %>%
mean()
set.seed(100)
# SUBHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL <- sapply(1:200, function(i) {cal_comm_hotdeck_sub(order = "New.Arrivals..HH.",
#                                             domain = "T_District_En")}) %>%
#   unlist() %>%
#   mean()
COMHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL <- sapply(1:200, function(i) {cal_comm_hotdeck_com_draft(order = "New.Arrivals..HH.",
domain = "T_District_En")}) %>%
unlist() %>%
mean()
set.seed(100)
# SUBkNN_COM_100_LAT.LON_SAMPLE_TRUE <- sapply(1:200, function(i) {cal_comm_knn_sub(100, dist_var = c("lat", "long"), catFun = sampleCat, addRandom = TRUE)}) %>%
#   unlist() %>%
#   mean()
COMkNN_COM_100_LAT.LON_SAMPLE_TRUE <- sapply(1:200, function(i) {cal_comm_knn_com_draft(100, dist_var = c("lat", "long"), catFun = sampleCat, addRandom = TRUE)}) %>%
unlist() %>%
mean()
#Codes added to export results for paper
#Creating data frame with all results
# plot1sub <- data.frame(Approach=c("SUBHOTDECK_COM_NULL_NULL","SUBHOTDECK_COM_NULL_DIS.ARRIVAL",
#                                   "SUBHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL","SUBkNN_COM_100_LAT.LON_SAMPLE_TRUE"),
#                        Margin_Error = c(SUBHOTDECK_COM_NULL_NULL,SUBHOTDECK_COM_NULL_DIS.ARRIVAL,
#                                         SUBHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL,SUBkNN_COM_100_LAT.LON_SAMPLE_TRUE)) %>%
#   mutate(Margin_Error = round(Margin_Error, 4))
plot1com_draft <- data.frame(Approach=c("COMHOTDECK_COM_NULL_NULL","COMHOTDECK_COM_NULL_DIS.ARRIVAL",
"COMHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL","COMkNN_COM_100_LAT.LON_SAMPLE_TRUE"),
Margin_Error = c(COMHOTDECK_COM_NULL_NULL,COMHOTDECK_COM_NULL_DIS.ARRIVAL,
COMHOTDECK_COM_HH.ARRIVAL_DIS.ARRIVAL,COMkNN_COM_100_LAT.LON_SAMPLE_TRUE)) %>%
mutate(Margin_Error = round(Margin_Error, 4))
# write_xlsx(plot1sub, "output/plot1sub.xlsx")
write_xlsx(plot1com_draft, "output/plot1com_draft.xlsx")
create_hh_na <- function(n)  {
na <- sample_n(arrivals, n) %>%
mutate(F_Sub.District_En = NA)
not_na <-anti_join(arrivals, na, by = "id")
with_na <- bind_rows(not_na, na)
with_na <- with_na %>%
rowwise() %>%
slice(rep(1:n(), each = New.Arrivals..HH.)) %>%
mutate(junk = runif(1))
}
hh_forced <- arrivals %>%
mutate(F_Sub.District_En = ifelse(T_Sub.District_En %in% c("Jandairis","Dana","Raju","Daret Azza"),NA,F_Sub.District_En)) %>%
rowwise() %>%
slice(rep(1:n(), each = New.Arrivals..HH.)) %>%
mutate(junk = runif(1))
#Outside of the function, we also generate the df called "arrivals_each" that represents each arrival as one row.
arrivals_each <- arrivals %>%
filter(!is.na(F_Sub.District_En)) %>%
rowwise() %>%
slice(rep(1:n(), each = New.Arrivals..HH.)) %>%
mutate(conc = paste0(T_Community_En,"_",F_Sub.District_En))
arr_each <- arrivals_each %>%
select(id, conc)
set.seed(100)
dat_hh <- create_hh_na(116)
cal_hh_hotdeck_com_draft <- function(order, domain, forced = FALSE) {
if (forced == TRUE){
data <- hh_forced
}else{
data <- create_hh_na(116)
}
data_imputed <- hotdeck(data = data,
variable = c("F_Sub.District_En"),
ord_var = c(order),
domain_var = c(domain))
data_imputed %>%
select(F_Sub.District_En,T_Community_En,New.Arrivals..HH.,id,F_Sub.District_En_imp) %>%
filter(F_Sub.District_En_imp == TRUE) %>%
mutate(conc_imp = paste0(T_Community_En,"_",F_Sub.District_En)) %>%
left_join(arr_each, by = "id") %>%
mutate(wrong_imp = ifelse(conc == conc_imp, 0, New.Arrivals..HH.)) %>%
ungroup() %>%
summarise(error_imp = sum(wrong_imp) / sum(New.Arrivals..HH.))
}
cal_hh_knn_com_draft <- function(k,
dist_var,
catFun,
addRandom,
forced = FALSE) {
if (forced == TRUE){
data <- hh_forced
}else{
data <- create_hh_na(116)
}
data_imputed <- kNN(data = data,
variable = c("F_Sub.District_En"),
dist_var = c(dist_var),
weights = NULL,
k = k,
catFun = catFun,
addRandom = addRandom)
data_imputed %>%
select(F_Sub.District_En,T_Community_En,New.Arrivals..HH.,id,F_Sub.District_En_imp) %>%
filter(F_Sub.District_En_imp == TRUE) %>%
mutate(conc_imp = paste0(T_Community_En,"_",F_Sub.District_En)) %>%
left_join(arr_each, by = "id") %>%
mutate(wrong_imp = ifelse(conc == conc_imp, 0, New.Arrivals..HH.)) %>%
ungroup() %>%
summarise(error_imp = sum(wrong_imp) / sum(New.Arrivals..HH.))
}
set.seed(100)
#
# SUBkNN_HH_100_LAT.LON_SAMPLE_TRUE <- sapply(1:100, function(i) {cal_hh_knn_sub(100, dist_var = c("lat", "long"), catFun = sampleCat, addRandom = TRUE)}) %>%
#   unlist() %>%
#   mean()
COMkNN_HH_100_LAT.LON_SAMPLE_TRUE <- sapply(1:100, function(i) {cal_hh_knn_com_draft(100, dist_var = c("lat", "long"), catFun = sampleCat, addRandom = TRUE)}) %>%
unlist() %>%
mean()
set.seed(100)
# SUBkNN_HH_50_LAT.LON_SAMPLE_TRUE <- sapply(1:100, function(i) {cal_hh_knn_sub(50, dist_var = c("lat", "long"), catFun = sampleCat, addRandom = TRUE)}) %>%
#   unlist() %>%
#   mean()
COMkNN_HH_50_LAT.LON_SAMPLE_TRUE <- sapply(1:100, function(i) {cal_hh_knn_com_draft(50, dist_var = c("lat", "long"), catFun = sampleCat, addRandom = TRUE)}) %>%
unlist() %>%
mean()
set.seed(100)
# SUBkNN_HH_200_LAT.LON_SAMPLE_TRUE <- sapply(1:100, function(i) {cal_hh_knn_sub(200, dist_var = c("lat", "long"), catFun = sampleCat, addRandom = TRUE)}) %>%
#   unlist() %>%
#   mean()
COMkNN_HH_200_LAT.LON_SAMPLE_TRUE <- sapply(1:100, function(i) {cal_hh_knn_com_draft(200, dist_var = c("lat", "long"), catFun = sampleCat, addRandom = TRUE)}) %>%
unlist() %>%
mean()
#Codes added to export results for paper
#Creating data frame with all results
# plot2sub <- data.frame(Approach=c("SUBkNN_HH_50_LAT.LON_SAMPLE_TRUE","SUBkNN_HH_100_LAT.LON_SAMPLE_TRUE",
#                                   "SUBkNN_HH_200_LAT.LON_SAMPLE_TRUE"),
#                        Margin_Error = c(SUBkNN_HH_50_LAT.LON_SAMPLE_TRUE,SUBkNN_HH_100_LAT.LON_SAMPLE_TRUE,
#                                         SUBkNN_HH_200_LAT.LON_SAMPLE_TRUE)) %>%
#   mutate(Margin_Error = round(Margin_Error, 4))
plot2com_draft <- data.frame(Approach=c("COMkNN_HH_50_LAT.LON_SAMPLE_TRUE","COMkNN_HH_100_LAT.LON_SAMPLE_TRUE",
"COMkNN_HH_200_LAT.LON_SAMPLE_TRUE"),
Margin_Error = c(COMkNN_HH_50_LAT.LON_SAMPLE_TRUE,COMkNN_HH_100_LAT.LON_SAMPLE_TRUE,COMkNN_HH_200_LAT.LON_SAMPLE_TRUE)) %>%
mutate(Margin_Error = round(Margin_Error, 4))
# write_xlsx(plot2sub, "output/plot2sub.xlsx")
write_xlsx(plot2com_draft, "output/plot2com_draft.xlsx")
